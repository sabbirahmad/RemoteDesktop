/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package my.RemoteDesktop;

/**
 *
 * @author sabbir
 */

import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

public class RemoteDesktop extends javax.swing.JFrame {

    /**
     * Creates new form RemoteDesktop
     */
    private int portServerInt=6789;//set port for server
    private int portClientInt=6789;//set port for client
    
    private String portServer="";//server port taken as String
    private String portClient="";//client port taken as String
    private String ipClient="";//client ip Address
    
    private boolean showComp=false;//show or hide computer&contacts
    
    //public static String status="Disconnected";
    
    
    //RemoteDesktop constructor begin
    public RemoteDesktop() {
        initComponents();//initializing components
        
        displayIP();//displaying server ip address
        setStatusTextArea("Ready to connect");//setting connection status
        
        ComputersAndContacts application=new ComputersAndContacts();
        application.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
          
        
    }//end RemoteDesktop constructor

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        remoteControlFileTransferButtonGroup = new javax.swing.ButtonGroup();
        MainFrame = new javax.swing.JFrame();
        ExitDialog = new javax.swing.JDialog();
        exitLabel = new javax.swing.JLabel();
        exitCheckBox = new javax.swing.JCheckBox();
        exitButton = new javax.swing.JButton();
        cancelExitButton = new javax.swing.JButton();
        mainTabbedPane = new javax.swing.JTabbedPane();
        yourInformationPanel = new javax.swing.JPanel();
        userNameLabelYourInformation = new javax.swing.JLabel();
        portLabelYourInformation = new javax.swing.JLabel();
        portTextFieldYourInformation = new javax.swing.JTextField();
        setButtonYourInformation = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        ipTextArea = new javax.swing.JTextArea();
        partnerPanel = new javax.swing.JPanel();
        serverIPLabelClient = new javax.swing.JLabel();
        serverIPTextFieldClient = new javax.swing.JTextField();
        connectButton = new javax.swing.JButton();
        serverPortTextFieldClient = new javax.swing.JTextField();
        serverPortLabelClient = new javax.swing.JLabel();
        messengerButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        statusTextArea = new javax.swing.JTextArea();
        compButton = new javax.swing.JButton();
        jMenuBarMainFrame = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        inviteFileItem = new javax.swing.JMenuItem();
        seperatorFileMenu = new javax.swing.JPopupMenu.Separator();
        exitFileItem = new javax.swing.JMenuItem();
        optionMenu = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        helpHelpItem = new javax.swing.JMenuItem();
        aboutHelpItem = new javax.swing.JMenuItem();

        javax.swing.GroupLayout MainFrameLayout = new javax.swing.GroupLayout(MainFrame.getContentPane());
        MainFrame.getContentPane().setLayout(MainFrameLayout);
        MainFrameLayout.setHorizontalGroup(
            MainFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        MainFrameLayout.setVerticalGroup(
            MainFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        exitLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        exitLabel.setText("Are you sure to exit?");

        exitCheckBox.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        exitCheckBox.setText("Don't ask me again");

        exitButton.setText("Exit");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });

        cancelExitButton.setText("Cancel");
        cancelExitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelExitButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ExitDialogLayout = new javax.swing.GroupLayout(ExitDialog.getContentPane());
        ExitDialog.getContentPane().setLayout(ExitDialogLayout);
        ExitDialogLayout.setHorizontalGroup(
            ExitDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ExitDialogLayout.createSequentialGroup()
                .addContainerGap(27, Short.MAX_VALUE)
                .addComponent(exitButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cancelExitButton)
                .addGap(33, 33, 33))
            .addGroup(ExitDialogLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(ExitDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(exitCheckBox)
                    .addComponent(exitLabel))
                .addContainerGap())
        );

        ExitDialogLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cancelExitButton, exitButton});

        ExitDialogLayout.setVerticalGroup(
            ExitDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ExitDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(exitLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addComponent(exitCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(ExitDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(exitButton)
                    .addComponent(cancelExitButton))
                .addContainerGap())
        );

        ExitDialogLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {cancelExitButton, exitButton});

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Remote Desktop");
        setResizable(false);

        mainTabbedPane.setBackground(new java.awt.Color(56, 189, 246));
        mainTabbedPane.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N

        yourInformationPanel.setBackground(new java.awt.Color(56, 189, 246));
        yourInformationPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Your Information", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Georgia", 1, 14), new java.awt.Color(255, 255, 255))); // NOI18N
        yourInformationPanel.setPreferredSize(new java.awt.Dimension(468, 20));

        userNameLabelYourInformation.setFont(new java.awt.Font("Bookman Old Style", 1, 14)); // NOI18N
        userNameLabelYourInformation.setText("Your IP");

        portLabelYourInformation.setFont(new java.awt.Font("Bookman Old Style", 1, 14)); // NOI18N
        portLabelYourInformation.setText("Port");

        portTextFieldYourInformation.setFont(new java.awt.Font("Comic Sans MS", 1, 13)); // NOI18N
        portTextFieldYourInformation.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        portTextFieldYourInformation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                portTextFieldYourInformationActionPerformed(evt);
            }
        });

        setButtonYourInformation.setFont(new java.awt.Font("Georgia", 0, 11)); // NOI18N
        setButtonYourInformation.setText("Set");
        setButtonYourInformation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setButtonYourInformationActionPerformed(evt);
            }
        });

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        ipTextArea.setColumns(20);
        ipTextArea.setEditable(false);
        ipTextArea.setFont(new java.awt.Font("Comic Sans MS", 1, 13)); // NOI18N
        ipTextArea.setRows(5);
        ipTextArea.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane1.setViewportView(ipTextArea);

        javax.swing.GroupLayout yourInformationPanelLayout = new javax.swing.GroupLayout(yourInformationPanel);
        yourInformationPanel.setLayout(yourInformationPanelLayout);
        yourInformationPanelLayout.setHorizontalGroup(
            yourInformationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(yourInformationPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(yourInformationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(yourInformationPanelLayout.createSequentialGroup()
                        .addGroup(yourInformationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(portLabelYourInformation, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(userNameLabelYourInformation, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(yourInformationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE)
                            .addComponent(portTextFieldYourInformation))
                        .addGap(0, 235, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, yourInformationPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(setButtonYourInformation)))
                .addContainerGap())
        );

        yourInformationPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jScrollPane1, portTextFieldYourInformation});

        yourInformationPanelLayout.setVerticalGroup(
            yourInformationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(yourInformationPanelLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(yourInformationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(userNameLabelYourInformation))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(yourInformationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                    .addComponent(portTextFieldYourInformation)
                    .addComponent(portLabelYourInformation))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addComponent(setButtonYourInformation))
        );

        yourInformationPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {portLabelYourInformation, userNameLabelYourInformation});

        yourInformationPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jScrollPane1, portTextFieldYourInformation});

        mainTabbedPane.addTab("Server", yourInformationPanel);

        partnerPanel.setBackground(new java.awt.Color(56, 189, 246));
        partnerPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Server Information", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Georgia", 1, 14), new java.awt.Color(255, 255, 255))); // NOI18N

        serverIPLabelClient.setFont(new java.awt.Font("Bookman Old Style", 1, 14)); // NOI18N
        serverIPLabelClient.setText("Server IP");

        serverIPTextFieldClient.setFont(new java.awt.Font("Comic Sans MS", 1, 13)); // NOI18N
        serverIPTextFieldClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                serverIPTextFieldClientActionPerformed(evt);
            }
        });

        connectButton.setFont(new java.awt.Font("Georgia", 0, 11)); // NOI18N
        connectButton.setText("Connect");
        connectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                connectButtonActionPerformed(evt);
            }
        });

        serverPortTextFieldClient.setFont(new java.awt.Font("Comic Sans MS", 1, 13)); // NOI18N
        serverPortTextFieldClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                serverPortTextFieldClientActionPerformed(evt);
            }
        });

        serverPortLabelClient.setFont(new java.awt.Font("Bookman Old Style", 1, 14)); // NOI18N
        serverPortLabelClient.setText("Server Port");

        messengerButton.setFont(new java.awt.Font("Georgia", 0, 11)); // NOI18N
        messengerButton.setText("Messenger");
        messengerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                messengerButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout partnerPanelLayout = new javax.swing.GroupLayout(partnerPanel);
        partnerPanel.setLayout(partnerPanelLayout);
        partnerPanelLayout.setHorizontalGroup(
            partnerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, partnerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(partnerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(partnerPanelLayout.createSequentialGroup()
                        .addGroup(partnerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(serverIPLabelClient, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(serverPortLabelClient, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(partnerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(serverIPTextFieldClient, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                            .addComponent(serverPortTextFieldClient))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, partnerPanelLayout.createSequentialGroup()
                        .addGap(0, 244, Short.MAX_VALUE)
                        .addComponent(messengerButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(connectButton, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        partnerPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {connectButton, messengerButton});

        partnerPanelLayout.setVerticalGroup(
            partnerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(partnerPanelLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(partnerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(serverIPLabelClient)
                    .addComponent(serverIPTextFieldClient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(partnerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(serverPortTextFieldClient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(serverPortLabelClient))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(partnerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(connectButton)
                    .addComponent(messengerButton))
                .addGap(7, 7, 7))
        );

        partnerPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {serverIPTextFieldClient, serverPortTextFieldClient});

        partnerPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {connectButton, messengerButton});

        mainTabbedPane.addTab("Client", partnerPanel);

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        statusTextArea.setBackground(new java.awt.Color(212, 208, 200));
        statusTextArea.setColumns(20);
        statusTextArea.setEditable(false);
        statusTextArea.setFont(new java.awt.Font("Georgia", 0, 13)); // NOI18N
        statusTextArea.setRows(5);
        statusTextArea.setBorder(null);
        statusTextArea.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane2.setViewportView(statusTextArea);

        compButton.setFont(new java.awt.Font("Georgia", 0, 11)); // NOI18N
        compButton.setText("Computers & Contacts");
        compButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                compButtonActionPerformed(evt);
            }
        });

        jMenuBarMainFrame.setBackground(new java.awt.Color(56, 189, 246));

        fileMenu.setBackground(new java.awt.Color(56, 189, 246));
        fileMenu.setText("Connection");
        fileMenu.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        inviteFileItem.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        inviteFileItem.setText("Invite");
        inviteFileItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inviteFileItemActionPerformed(evt);
            }
        });
        fileMenu.add(inviteFileItem);
        fileMenu.add(seperatorFileMenu);

        exitFileItem.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        exitFileItem.setText("Exit");
        exitFileItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitFileItemActionPerformed(evt);
            }
        });
        fileMenu.add(exitFileItem);

        jMenuBarMainFrame.add(fileMenu);

        optionMenu.setBackground(new java.awt.Color(56, 189, 246));
        optionMenu.setText("Options");
        optionMenu.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jMenuItem1.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        jMenuItem1.setText("Settings");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        optionMenu.add(jMenuItem1);

        jMenuBarMainFrame.add(optionMenu);

        helpMenu.setBackground(new java.awt.Color(56, 189, 246));
        helpMenu.setText("Help");
        helpMenu.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        helpHelpItem.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        helpHelpItem.setText("Help");
        helpMenu.add(helpHelpItem);

        aboutHelpItem.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        aboutHelpItem.setText("About");
        helpMenu.add(aboutHelpItem);

        jMenuBarMainFrame.add(helpMenu);

        setJMenuBar(jMenuBarMainFrame);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(mainTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 473, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(compButton)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(54, Short.MAX_VALUE)
                .addComponent(mainTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(compButton))
                .addGap(5, 5, 5))
        );

        mainTabbedPane.getAccessibleContext().setAccessibleName("tab2");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void inviteFileItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inviteFileItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inviteFileItemActionPerformed

    private void connectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_connectButtonActionPerformed
        // TODO add your handling code here:
        Client application = new Client(ipClient,portClientInt);//creating client JFrame
        application.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        application.setVisible(false);
        
        ClientMessenger messengerClient=new ClientMessenger(ipClient,portClientInt+1);
        messengerClient.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
        messengerClient.setVisible(false);
    }//GEN-LAST:event_connectButtonActionPerformed

    private void exitFileItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitFileItemActionPerformed
        // TODO add your handling code here:
        ExitDialog.setSize(300,150);
        ExitDialog.setVisible(true);
    }//GEN-LAST:event_exitFileItemActionPerformed

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_exitButtonActionPerformed

    private void cancelExitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelExitButtonActionPerformed
        // TODO add your handling code here:
        ExitDialog.setVisible(false);
    }//GEN-LAST:event_cancelExitButtonActionPerformed

    private void portTextFieldYourInformationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_portTextFieldYourInformationActionPerformed
        // TODO add your handling code here:
        String port="";
        
        //get port of server as String
        if(evt.getSource()==portTextFieldYourInformation){
            port=String.format("%s",evt.getActionCommand());
            portServer=port;
        }
        
        try
        {
            portServerInt=Integer.parseInt(portServer);//convert String to integer
            //System.out.printf("portServerInt= %d\n",portServerInt);
        }//end try
        catch(Exception e)
        {
            portServer="";
            //showing error message for wrong port
            JOptionPane.showMessageDialog(partnerPanel, "Please enter valid number.\nRange: 1025-65536","Error!",JOptionPane.ERROR_MESSAGE);
        }//end catch
        
    }//GEN-LAST:event_portTextFieldYourInformationActionPerformed

    private void setButtonYourInformationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setButtonYourInformationActionPerformed
        // TODO add your handling code here:    
        Server application = new Server(portServerInt);//creating server JFrame
        application.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        application.setVisible(true);
        
        ServerMessenger messenger;
        try {
            messenger = new ServerMessenger(portServerInt+1);
            messenger.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
            messenger.setVisible(false);
        } catch (IOException ex) {
            Logger.getLogger(RemoteDesktop.class.getName()).log(Level.SEVERE, null, ex);
        }
            //p.setDefaultCloseOperation(EXIT_ON_CLOSE);
        
    }//GEN-LAST:event_setButtonYourInformationActionPerformed

    private void serverPortTextFieldClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_serverPortTextFieldClientActionPerformed
        // TODO add your handling code here:
        String port="";
        
        //get port from client as String
        if(evt.getSource()==serverPortTextFieldClient){
            port=String.format("%s",evt.getActionCommand());
            portClient=port;
        }
        try
        {
            portClientInt=Integer.parseInt(portClient);//convert String to integer
            //System.out.printf("portClientInt= %d\n",portClientInt);
        }//end try
        catch(Exception e)
        {
            portClient="";
            //showing error message for wrong port
            JOptionPane.showMessageDialog(partnerPanel, "Please enter valid number.\nRange: 1025-65536","Error!",JOptionPane.ERROR_MESSAGE);
        }//end catch
    }//GEN-LAST:event_serverPortTextFieldClientActionPerformed

    private void serverIPTextFieldClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_serverIPTextFieldClientActionPerformed
        // TODO add your handling code here:
        //get port from client as String
        if(evt.getSource()==serverIPTextFieldClient){
            ipClient=String.format("%s",evt.getActionCommand());
        }
    }//GEN-LAST:event_serverIPTextFieldClientActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void compButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_compButtonActionPerformed
        // TODO add your handling code here:
        if(showComp==false)//check if comp is not showing
            showComp=true;//set comp for showing
        else
            showComp=false;
        ComputersAndContacts.showAndHideComp(showComp);//else hide comp
    }//GEN-LAST:event_compButtonActionPerformed

    private void messengerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_messengerButtonActionPerformed
        // TODO add your handling code here:
        ClientMessenger.showMessenger=true;
        /*
        if(ClientMessenger.connected==false)
        {
            JOptionPane.showMessageDialog(partnerPanel, "You are not connected!");
        }
        else
        {
            ClientMessenger.showMessenger=true;
        }*/
        
    }//GEN-LAST:event_messengerButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    //method setStatusTextArea() to set the connection status begin
    public static void setStatusTextArea(String status)
    {
        statusTextArea.setText(status);
    }//end method setStatusTextArea()
    
    //method dislayIP() to show IP address begin
    public void displayIP()
    {
        try
        {
            java.net.InetAddress i=java.net.InetAddress.getLocalHost();//get ip address
            ipTextArea.setText(i.getHostAddress());//show ip address is jtextfield
        }//end try
        catch(Exception exception)
        {
            ipTextArea.setText("IP not found");//showing if ip is not found
        }//end catch
    }//end method displayIP
    
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RemoteDesktop.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RemoteDesktop.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RemoteDesktop.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RemoteDesktop.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /*
         * Create and display the form
         */ 
        
        
                
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                new RemoteDesktop().setVisible(true);
            }
        });
        
        
        
    }//end main
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog ExitDialog;
    private javax.swing.JFrame MainFrame;
    private javax.swing.JMenuItem aboutHelpItem;
    private javax.swing.JButton cancelExitButton;
    private javax.swing.JButton compButton;
    private javax.swing.JButton connectButton;
    private javax.swing.JButton exitButton;
    private javax.swing.JCheckBox exitCheckBox;
    private javax.swing.JMenuItem exitFileItem;
    private javax.swing.JLabel exitLabel;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenuItem helpHelpItem;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JMenuItem inviteFileItem;
    private javax.swing.JTextArea ipTextArea;
    private javax.swing.JMenuBar jMenuBarMainFrame;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private static javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane mainTabbedPane;
    private javax.swing.JButton messengerButton;
    private javax.swing.JMenu optionMenu;
    private javax.swing.JPanel partnerPanel;
    private javax.swing.JLabel portLabelYourInformation;
    private javax.swing.JTextField portTextFieldYourInformation;
    private javax.swing.ButtonGroup remoteControlFileTransferButtonGroup;
    private javax.swing.JPopupMenu.Separator seperatorFileMenu;
    private javax.swing.JLabel serverIPLabelClient;
    private javax.swing.JTextField serverIPTextFieldClient;
    private javax.swing.JLabel serverPortLabelClient;
    private javax.swing.JTextField serverPortTextFieldClient;
    private javax.swing.JButton setButtonYourInformation;
    private static javax.swing.JTextArea statusTextArea;
    private javax.swing.JLabel userNameLabelYourInformation;
    private javax.swing.JPanel yourInformationPanel;
    // End of variables declaration//GEN-END:variables
}//end RemoteDesktop class
